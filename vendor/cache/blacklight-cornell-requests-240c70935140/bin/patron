#!/usr/bin/env ruby
$:.unshift (File.dirname(__FILE__) + "/../lib")
$:.unshift (File.dirname(__FILE__) + "/../lib/blacklight_cornell_requests")


class Object
  def blank?
    respond_to?(:empty?) ? empty? : !self
  end
end

module BlacklightCornellRequests
    class VoyagerRequest
     attr_accessor :xml
    end
end


class Hold 
  begin
    require 'json'
    require 'james_monkeys'
    require 'httpclient'
    require 'voyager_request'
  rescue LoadError
    require 'rubygems'
    require 'json'
    require 'james_monkeys'
    require 'httpclient'
    require 'voyager_request'
  end
  VOYAGER_REQ_HOLDS = "#{ENV['REST_URL']}/SendPatronRequestService"
  HOLDINGS_URL      = "#{ENV['REST_URL']}/GetHoldingsService"
  MYACC_URL  = "#{ENV['REST_URL']}/MyAccountService"

  def usage(s)
    $stderr.puts(s)
    $stderr.puts("Usage: #{File.basename($0)}: [-b bibid -m mfhdid -i itemid -l libraryid -n netid [-r (restfull) -p [hold|recall|callslip] ...")
    exit(2)
  end
  def run()
   restfull   = false
   bibid     = ''
   mfhdid     = ''
   itemid     = ''
   libraryid     = ''
   netid     = ''
   place     = ''

   loop { case ARGV[0]
      when '-r' then  ARGV.shift; restfull = true
      when '-b' then  ARGV.shift; bibid  = ARGV.shift
      when '-m' then  ARGV.shift; mfhdid  = ARGV.shift
      when '-i' then  ARGV.shift; itemid  = ARGV.shift
      when '-l' then  ARGV.shift; libraryid  = ARGV.shift
      when '-n' then  ARGV.shift; netid  = ARGV.shift
      when '-p' then  ARGV.shift; place  = ARGV.shift
      when /^-/ then  usage("Unknown option: #{ARGV[0].inspect}")
      else break
   end; }

    was = BlacklightCornellRequests::VoyagerRequest.use_rest(restfull)
    req =  BlacklightCornellRequests::VoyagerRequest.new(bibid,{:request_url => MYACC_URL ,:holdings_url =>HOLDINGS_URL})
    req.patron(netid)
    req.user_account
    print req.xml.to_xml(:indent => 2)
    true 
  end
end 

  app = Hold.new();
  exit(app.run())
