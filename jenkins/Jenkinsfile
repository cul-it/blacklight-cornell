pipeline {
    agent any
    environment {
        GIT_ACCESS_TOKEN = credentials('f3b46a8a-a247-4703-baf7-c27c69656aaa')
        JENKINS_PROJECT = "blacklight-cornell-validate-pull-request"
        SOLR_URL = credentials('FOLIO_FEW_solr_url')
        STORAGE_URL = "http://digcoll.internal.library.cornell.edu:8080/fcrepo/rest"
        COLLECTIONS = "development"
        CATALOG = "http://da-prod-solr.library.cornell.edu/solr/blacklight"
    }
    stages {
        stage('Set up and run bundler') {
            steps {
                echo 'Run prelude.sh'
                sh 'jenkins/prelude.sh'
                slackSend channel: "#newcatalog", color: "#439FE0", message: "Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"

            }
        }

        // stage("cucumber single test") {
        //     steps {
        //         timeout(45) {
        //             wrap([$class: 'Xvfb', additionalOptions: '', assignedLabels: '', autoDisplayName: true, debug: true, displayNameOffset: 0, installationName: 'default', parallelBuild: true, screen: '1024x758x24', timeout: 25]) {
        //                 sh 'jenkins/cucumber-features.sh features/catalog_search/item_view.feature:136'
        //             }
        //         }
        //     }
        // }

        stage("cucumber assumption") {
            steps {
                timeout(45) {
                    wrap([$class: 'Xvfb', additionalOptions: '', assignedLabels: '', autoDisplayName: true, debug: true, displayNameOffset: 0, installationName: 'default', parallelBuild: true, screen: '1024x758x24', timeout: 25]) {
                        sh 'jenkins/cucumber-features.sh features/assumption'
                    }
                }
            }
        }

        stage("cucumber browse") {
            steps {
                timeout(45) {
                    wrap([$class: 'Xvfb', additionalOptions: '', assignedLabels: '', autoDisplayName: true, debug: true, displayNameOffset: 0, installationName: 'default', parallelBuild: true, screen: '1024x758x24', timeout: 25]) {
                        sh 'jenkins/cucumber-features.sh features/browse'
                    }
                }
            }
        }

        stage("cucumber catalog_search") {
            steps {
                timeout(45) {
                    wrap([$class: 'Xvfb', additionalOptions: '', assignedLabels: '', autoDisplayName: true, debug: true, displayNameOffset: 0, installationName: 'default', parallelBuild: true, screen: '1024x758x24', timeout: 25]) {
                        sh 'jenkins/cucumber-features.sh features/catalog_search'
                    }
                }
            }
        }

        stage("cucumber databases") {
            steps {
                timeout(45) {
                    wrap([$class: 'Xvfb', additionalOptions: '', assignedLabels: '', autoDisplayName: true, debug: true, displayNameOffset: 0, installationName: 'default', parallelBuild: true, screen: '1024x758x24', timeout: 25]) {
                        sh 'jenkins/cucumber-features.sh features/databases'
                    }
                }
            }
        }

        stage("cucumber digitalcollections") {
            steps {
                timeout(45) {
                    wrap([$class: 'Xvfb', additionalOptions: '', assignedLabels: '', autoDisplayName: true, debug: true, displayNameOffset: 0, installationName: 'default', parallelBuild: true, screen: '1024x758x24', timeout: 25]) {
                        sh 'jenkins/cucumber-features.sh features/digitalcollections'
                    }
                }
            }
        }

        stage("cucumber folio") {
            steps {
                timeout(45) {
                    wrap([$class: 'Xvfb', additionalOptions: '', assignedLabels: '', autoDisplayName: true, debug: true, displayNameOffset: 0, installationName: 'default', parallelBuild: true, screen: '1024x758x24', timeout: 25]) {
                        sh 'jenkins/cucumber-features.sh features/folio'
                    }
                }
            }
        }

        stage("cucumber single_search") {
            steps {
                timeout(45) {
                    wrap([$class: 'Xvfb', additionalOptions: '', assignedLabels: '', autoDisplayName: true, debug: true, displayNameOffset: 0, installationName: 'default', parallelBuild: true, screen: '1024x758x24', timeout: 25]) {
                        sh 'jenkins/cucumber-features.sh features/single_search'
                    }
                }
            }
        }

        stage('Publish Coverage') {
            steps {
                sh 'mkdir -p coverage'
                sh 'chmod g+w coverage'
                sh 'echo "dummy file to prevent copy error when there are no other files" > cover/dummy-file.txt'
                publishHTML(target: [allowMissing: false, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'coverage', reportFiles: 'index.html', reportName: 'Code Coverage Report', reportTitles: 'BlacklightCornell'])
            }
        }
    }
    post {
        success {
            echo "The thrill of victory"
            sh 'jenkins/report-status-to-github.sh success'
            // slackSend channel: "#discovery-and-access", color: "#00ff00", message: "Build Successful - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
        unsuccessful {
            echo "The agony of defeat"
            sh 'jenkins/report-status-to-github.sh failure'
            // slackSend channel: "#discovery-and-access", color: "#ff0000", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
    }
}