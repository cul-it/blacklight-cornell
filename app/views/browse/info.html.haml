-if @headingsResponse.present? 
	.return-link
		=link_to "/browse?q=" + params[:q] + "&browse_type=" + params[:browse_type] + "&start=0"do
			%i.fa.fa-arrow-circle-left
			Back to list
	- @headingsResponse.each do |data|
		%h2
			=data["heading"]
		-if data["counts_json"].present?
			-works=JSON.parse(data["counts_json"])
				.author-works
					Works by:

					-if params[:browse_type] == "Author" 
						= link_to '/?q="' + data["heading"] + '"&search_field=author%2Fcreator' do
							=works["worksBy"]
							Title(s)
					-if params[:browse_type] == "Subject"
						= link_to '/?q="' + data["heading"] + '"&search_field=subject' do
							=works["worksBy"]
							Title(s)
				-if !works["worksAbout"].nil?
				.author-works
					Works about:
					= link_to '/?q="' + data["heading"] + '"&search_field=subject' do
						=works["worksAbout"] 
						Title(s)

		%dl
			- if !data["notes"].nil?
				%dt
					Scope note
				%dd
					-data["notes"].each do |n|
						=n
			%dt
				Reference info
			%dd
				.reference


					-if !data["seeAlso"].nil?  
						-if data["seeAlso"].present?
							- data["seeAlso"].each do |a|
								-unless a.blank?
									-a_link = a.split("|")[0]
									-a_note = a.split("|")[1]
									-aq = URI::encode(a_link)
									-refclnt = HTTPClient.new
									-if params[:browse_type] == "Author"
										-@seeAlsoResultString = refclnt.get_content('http://da-stg-ssolr.library.cornell.edu/solr/author/browse?q="' + "aq" + '"' )
									-if params[:browse_type] == "Subject"
										-@seeAlsoResultString = refclnt.get_content('http://da-stg-ssolr.library.cornell.edu/solr/author/browse?q="' + aq + '"' )
									-if !@seeAlsoResultString.nil?
										-@seeAlsoResponseFull = eval(@seeAlsoResultString)
									-else
										-@seeAlsoResponseFull = eval("Could not find")
									-@seeAlsoResponse = @seeAlsoResponseFull['response']['docs']
									- if a_note.present?
										.reference-note
											=a_note + ':'

									- if a_note.nil?
										.reference-note
											See also:
									=link_to "/browse?q=" + a_link + "&start=0" + "&browse_type=" + params[:browse_type] do
										=a_link
								-unless @seeAlsoResponse.blank?
									-@seeAlsoResponse.each do |sa|
										
										-unless sa["seeAlso"].blank? && sa["notes"].blank?
											=link_to "/browse/info?q=" + a_link + "&start=0" + "&browse_type=" + params[:browse_type]do
												%span.label.label-info
													Info
									- if params[:browse_type] == "Author"
										.author-works
											Works by:
											= link_to '/?q="' + a_link + '"&search_field=author%2Fcreator' do
												(title count)
									.author-works
										Works about:
										= link_to '/?q="' + a_link + '"&search_field=subject' do
											(title count)
					-if !data["alternateForm"].nil?
						.reference-note
							Alternate form(s):
						-data["alternateForm"].each do |af|
							.alternate-form
								=af
			%dt
				Headings type
			%dd
				=data["headingTypeDesc"]				
		- if data["mainEntry"] == true
			%h3
				Description
			-rda=JSON.parse(data["rda_json"])
			- if rda["Birth Place"].present?
				%dt 
					Birth Place
				%dd
					-rda["Birth Place"].each do |place|
						=place
			- if rda["Place of Death"].present?
				%dt 
					Place of Death
				%dd
					-rda["Place of Death"].each do |deathplace|
						=deathplace
			- if rda["Gender"].present?
				%dt
					Gender
				%dd
					-rda["Gender"].each do |gender|
						=gender
			- if rda["Country"].present?
				%dt 
					Country
				%dd
					-rda["Country"].each do |country|
						=country
			- if rda["Field"].present?
				%dt
					Field
				%dd
					-rda["Field"].each do |field|
						=org
			- if rda["Group/Organization"].present?
				%dt
					Group or Organization
				%dd
					-rda["Group/Organization"].each do |org|
						=org
			- if rda["Occupation"].present?
				%dt
					Occupation
				%dd
					-rda["Occupation"].each do |field|
						.rda-occupation
							=field

			- if rda["Form of Work"].present?
				%dt
					Form of Work
				%dd
					-rda["Form of Work"].each do |fow|
						=fow
			- if rda["Instrumentation"].present?
				%dt
					Instrumentation
				%dd
					-rda["Instrumentation"].each do |inst|
						=inst
	
